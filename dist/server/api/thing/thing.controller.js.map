{"version":3,"sources":["api/thing/thing.controller.js"],"names":[],"mappings":"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","file":"api/thing/thing.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/things              ->  index\n * POST    /api/things              ->  create\n * GET     /api/things/:id          ->  show\n * PUT     /api/things/:id          ->  upsert\n * PATCH   /api/things/:id          ->  patch\n * DELETE  /api/things/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Thing from './thing.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Things\nexport function index(req, res) {\n  return Thing.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Thing from the DB\nexport function show(req, res) {\n  return Thing.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Thing in the DB\nexport function create(req, res) {\n  return Thing.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given Thing in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Thing.findOneAndUpdate(req.params.id, req.body, {upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Thing in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Thing.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Thing from the DB\nexport function destroy(req, res) {\n  return Thing.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"],"sourceRoot":"/source/"}