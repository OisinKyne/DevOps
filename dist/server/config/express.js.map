{"version":3,"sources":["config/express.js"],"names":[],"mappings":"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","file":"config/express.js","sourcesContent":["/**\n * Express configuration\n */\n\n'use strict';\n\nimport express from 'express';\nimport favicon from 'serve-favicon';\nimport morgan from 'morgan';\nimport shrinkRay from 'shrink-ray';\nimport bodyParser from 'body-parser';\nimport methodOverride from 'method-override';\nimport cookieParser from 'cookie-parser';\nimport errorHandler from 'errorhandler';\nimport path from 'path';\nimport lusca from 'lusca';\nimport config from './environment';\nimport session from 'express-session';\nimport connectMongo from 'connect-mongo';\nimport mongoose from 'mongoose';\nvar MongoStore = connectMongo(session);\n\nexport default function(app) {\n  var env = app.get('env');\n\n  if (env === 'development' || env === 'test') {\n    app.use(express.static(path.join(config.root, '.tmp')));\n  }\n\n  if (env === 'production') {\n    app.use(favicon(path.join(config.root, 'client', 'favicon.ico')));\n  }\n\n  app.set('appPath', path.join(config.root, 'client'));\n  app.use(express.static(app.get('appPath')));\n  app.use(morgan('dev'));\n\n  app.set('views', config.root + '/server/views');\n  app.engine('html', require('ejs').renderFile);\n  app.set('view engine', 'html');\n  app.use(shrinkRay());\n  app.use(bodyParser.urlencoded({ extended: false }));\n  app.use(bodyParser.json());\n  app.use(methodOverride());\n  app.use(cookieParser());\n\n  \n  // Persist sessions with MongoStore / sequelizeStore\n  // We need to enable sessions for passport-twitter because it's an\n  // oauth 1.0 strategy, and Lusca depends on sessions\n  app.use(session({\n    secret: config.secrets.session,\n    saveUninitialized: true,\n    resave: false,\n    store: new MongoStore({\n      mongooseConnection: mongoose.connection,\n      db: 'full-stack'\n    })\n  }));\n\n  /**\n   * Lusca - express server security\n   * https://github.com/krakenjs/lusca\n   */\n  if (env !== 'test' && !process.env.SAUCE_USERNAME) {\n    app.use(lusca({\n      csrf: {\n        angular: true\n      },\n      xframe: 'SAMEORIGIN',\n      hsts: {\n        maxAge: 31536000, //1 year, in seconds\n        includeSubDomains: true,\n        preload: true\n      },\n      xssProtection: true\n    }));\n  }\n\n  if ('development' === env) {\n    const webpackDevMiddleware = require('webpack-dev-middleware');\n    const stripAnsi = require('strip-ansi'); \n    const webpack = require('webpack');\n    const makeWebpackConfig = require('../../webpack.make');\n    const webpackConfig = makeWebpackConfig({ DEV: true });\n    const compiler = webpack(webpackConfig);\n    const browserSync = require('browser-sync').create(); \n\n    /**\n     * Run Browsersync and use middleware for Hot Module Replacement\n     */\n    browserSync.init({\n      open: false,\n      logFileChanges: false,\n      proxy: 'localhost:' + config.port,\n      ws: true,\n      middleware: [\n        webpackDevMiddleware(compiler, {\n          noInfo: false,\n          stats: {\n            colors: true,\n            timings: true,\n            chunks: false   \n          }\n        })\n      ],\n      port: config.browserSyncPort,\n      plugins: ['bs-fullscreen-message']\n    });\n\n    /**\n     * Reload all devices when bundle is complete\n     * or send a fullscreen error message to the browser instead\n     */\n    compiler.plugin('done', function (stats) {\n      console.log('webpack done hook');\n        if (stats.hasErrors() || stats.hasWarnings()) {\n            return browserSync.sockets.emit('fullscreen:message', {\n                title: \"Webpack Error:\",\n                body: stripAnsi(stats.toString()),\n                timeout: 100000\n            });\n        }\n        browserSync.reload();\n    });\n  }\n\n  if ('development' === env || 'test' === env) {\n    app.use(errorHandler()); // Error handler - has to be last\n  }\n}\n"],"sourceRoot":"/source/"}